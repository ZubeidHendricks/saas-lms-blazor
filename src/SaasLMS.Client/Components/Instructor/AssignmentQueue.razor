@code {
    [Parameter]
    public List<AssignmentSubmissionDTO>? Assignments { get; set; }

    private List<CourseDTO>? _courses;
    private string _selectedCourse = string.Empty;
    private bool _showGradingDialog;
    private AssignmentSubmissionDTO? _selectedAssignment;

    protected override async Task OnInitializedAsync()
    {
        await LoadCoursesAsync();
    }

    private IEnumerable<AssignmentSubmissionDTO> FilteredAssignments =>
        Assignments?.Where(a => string.IsNullOrEmpty(_selectedCourse) || a.CourseId.ToString() == _selectedCourse) ?? 
        Enumerable.Empty<AssignmentSubmissionDTO>();

    private async Task LoadCoursesAsync()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<ResponseDTO<List<CourseDTO>>>("api/instructor/courses");
            if (response?.Success == true)
            {
                _courses = response.Data;
            }
        }
        catch (Exception ex)
        {
            // Handle error
            Console.WriteLine(ex);
        }
    }

    private string GetStatusClass(string status) => status.ToLower() switch
    {
        "pending" => "bg-yellow-100 text-yellow-800",
        "in_review" => "bg-blue-100 text-blue-800",
        "graded" => "bg-green-100 text-green-800",
        "resubmitted" => "bg-purple-100 text-purple-800",
        _ => "bg-gray-100 text-gray-800"
    };

    private void GradeAssignment(AssignmentSubmissionDTO assignment)
    {
        _selectedAssignment = assignment;
        _showGradingDialog = true;
    }

    private async Task HandleGradingSave(GradingResultDTO result)
    {
        try
        {
            var response = await Http.PostAsJsonAsync($"api/assignments/{_selectedAssignment!.Id}/grade", result);
            if (response.IsSuccessStatusCode)
            {
                _showGradingDialog = false;
                // Refresh assignments
                var apiResponse = await Http.GetFromJsonAsync<ResponseDTO<List<AssignmentSubmissionDTO>>>("api/instructor/assignments");
                if (apiResponse?.Success == true)
                {
                    Assignments = apiResponse.Data;
                }
            }
        }
        catch (Exception ex)
        {
            // Handle error
            Console.WriteLine(ex);
        }
    }
}